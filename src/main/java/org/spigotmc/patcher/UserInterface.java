package org.spigotmc.patcher;

import java.awt.EventQueue;
import java.io.File;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.filechooser.FileNameExtensionFilter;

public class UserInterface extends JFrame
{

    private final PrintWriter consoleStream;
    private File lastDir = new File( "." );

    public UserInterface()
    {
        consoleStream = new PrintWriter( new StringWriter()
        {

            @Override
            public void flush()
            {
                consoleBox.append( getBuffer().toString() );
                getBuffer().setLength( 0 );
            }
        }, true );
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        originalLabel = new javax.swing.JLabel();
        originalBox = new javax.swing.JTextField();
        originalBrowse = new javax.swing.JButton();
        patchLabel = new javax.swing.JLabel();
        outputLabel = new javax.swing.JLabel();
        patchBox = new javax.swing.JTextField();
        patchBrowse = new javax.swing.JButton();
        outputBox = new javax.swing.JTextField();
        outputBrowse = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        consoleBox = new javax.swing.JTextArea();
        patchButton = new javax.swing.JButton();
        copyLabel = new javax.swing.JLabel();
        updateLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SpigotPatcher");

        originalLabel.setText("Original Jar (Spigot #1649):");

        originalBrowse.setText("Browse");
        originalBrowse.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                originalBrowseMouseClicked(evt);
            }
        });

        patchLabel.setText("Patch File (bps):");

        outputLabel.setText("Output Jar:");

        patchBrowse.setText("Browse");
        patchBrowse.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                patchBrowseMouseClicked(evt);
            }
        });

        outputBrowse.setText("Browse");
        outputBrowse.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                outputBrowseMouseClicked(evt);
            }
        });

        consoleBox.setEditable(false);
        consoleBox.setColumns(20);
        consoleBox.setLineWrap(true);
        consoleBox.setRows(5);
        consoleBox.setWrapStyleWord(true);
        consoleBox.setAutoscrolls(false);
        jScrollPane1.setViewportView(consoleBox);

        patchButton.setText("Patch!");
        patchButton.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                patchButtonMouseClicked(evt);
            }
        });

        copyLabel.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        copyLabel.setText("SpigotPatcher (c) SpigotMC 2014");

        updateLabel.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        updateLabel.setText("Download updates at http://www.spigotmc.org/");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(originalLabel)
                                .addGap(6, 6, 6))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(outputLabel)
                                    .addComponent(patchLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(originalBox, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(originalBrowse))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(patchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(patchBrowse))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(outputBox, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(outputBrowse)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(copyLabel)
                            .addComponent(updateLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(patchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(originalLabel)
                    .addComponent(originalBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(originalBrowse))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patchBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patchLabel)
                    .addComponent(patchBrowse))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(outputLabel)
                    .addComponent(outputBrowse))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(copyLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateLabel))
                    .addComponent(patchButton))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void patchButtonMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_patchButtonMouseClicked
    {//GEN-HEADEREND:event_patchButtonMouseClicked
        if ( originalBox.getText().isEmpty() || patchBox.getText().isEmpty() || outputBox.getText().isEmpty() )
        {
            JOptionPane.showMessageDialog( this, "Please browse for all input / output files.", "Please select required files.", JOptionPane.ERROR_MESSAGE );
            return;
        }
        Main.patchSafe( consoleStream, new File( originalBox.getText() ), new File( patchBox.getText() ), new File( outputBox.getText() ) );
    }//GEN-LAST:event_patchButtonMouseClicked

    private void originalBrowseMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_originalBrowseMouseClicked
    {//GEN-HEADEREND:event_originalBrowseMouseClicked
        choose( originalBox, "Jar Files", "jar" );
    }//GEN-LAST:event_originalBrowseMouseClicked

    private void patchBrowseMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_patchBrowseMouseClicked
    {//GEN-HEADEREND:event_patchBrowseMouseClicked
        choose( patchBox, "Patch Files", "bps" );
    }//GEN-LAST:event_patchBrowseMouseClicked

    private void outputBrowseMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_outputBrowseMouseClicked
    {//GEN-HEADEREND:event_outputBrowseMouseClicked
        choose( outputBox, "Jar Files", "jar" );
    }//GEN-LAST:event_outputBrowseMouseClicked

    private void choose(JTextField box, String description, String extension)
    {
        JFileChooser chooser = new JFileChooser( lastDir );
        chooser.setFileFilter( new FileNameExtensionFilter( description, extension ) );
        chooser.setFileSelectionMode( JFileChooser.FILES_ONLY );
        chooser.showOpenDialog( this );

        if ( chooser.getSelectedFile() != null )
        {
            box.setText( chooser.getSelectedFile().getPath() );
            lastDir = chooser.getCurrentDirectory();
        }
    }

    public static void main(String args[])
    {
        try
        {
            UIManager.setLookAndFeel( UIManager.getSystemLookAndFeelClassName() );
        } catch ( ClassNotFoundException ex )
        {
            Logger.getLogger( UserInterface.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        } catch ( InstantiationException ex )
        {
            Logger.getLogger( UserInterface.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        } catch ( IllegalAccessException ex )
        {
            Logger.getLogger( UserInterface.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        } catch ( javax.swing.UnsupportedLookAndFeelException ex )
        {
            Logger.getLogger( UserInterface.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }

        EventQueue.invokeLater( new Runnable()
        {
            @Override
            public void run()
            {
                new UserInterface().setVisible( true );
            }
        } );
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea consoleBox;
    private javax.swing.JLabel copyLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField originalBox;
    private javax.swing.JButton originalBrowse;
    private javax.swing.JLabel originalLabel;
    private javax.swing.JTextField outputBox;
    private javax.swing.JButton outputBrowse;
    private javax.swing.JLabel outputLabel;
    private javax.swing.JTextField patchBox;
    private javax.swing.JButton patchBrowse;
    private javax.swing.JButton patchButton;
    private javax.swing.JLabel patchLabel;
    private javax.swing.JLabel updateLabel;
    // End of variables declaration//GEN-END:variables
}
